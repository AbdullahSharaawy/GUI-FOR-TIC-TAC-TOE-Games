<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABABoAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADIATEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwCA1G/epDUb96+xR9zWIHqN+9SPUb966IHm1iFqiPU1K1RHqa3R5dYgfvUMsixRl3YK
        ijJJq1swjyMwWNBudz0Uf4+1ctqN819NtUFYVPyqep9z71yY3Hww0e7eyPOqJjL26a9mBAxGvCj29/ei
        KIYJY4QcFvX2HvRDDkFmO1F+839B71KSuA7DCD7ievufb3718pOUqsnVqPVkJJKyAn7sjDAXAjX1x3P0
        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
        msRUUUVqcp//2Q==
</value>
  </data>
</root>